{"version":3,"sources":["webpack:///./src/templates/page/index.js","webpack:///./src/templates/index.js"],"names":["Page","data","dangerouslySetInnerHTML","__html","post","html","pageQuery","Template","location","title","get","site","options","isIndex","adsense","props"],"mappings":"qPAMeA,G,UAHF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,yBAAKC,wBAAyB,CAAEC,OAAQF,EAAKG,KAAKC,UC4BvCC,GAFEC,UArBE,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAMO,EAAT,EAASA,SAAT,OACf,6BACE,kBAAC,IAAD,CAAQA,SAAUA,GAChB,kBAAC,IAAD,CACEC,MAAOC,IAAIT,EAAM,0BACjBU,KAAMD,IAAIT,EAAM,eAEuB,QAAxCS,IAAIT,EAAM,2BACT,kBAAC,IAAD,CACEA,KAAMS,IAAIT,EAAM,QAChBW,QAAS,CACPC,SAAS,EACTC,QAASJ,IAAIT,EAAM,wBAIvB,kBAAC,Q,GAAcc,UAOD","file":"component---src-templates-index-js-67b648c968a37cf38729.js","sourcesContent":["import React from 'react'\r\nimport './style.scss'\r\n\r\nconst Page = ({ data }) => (\r\n  <div dangerouslySetInnerHTML={{ __html: data.post.html }} />\r\n)\r\nexport default Page\r\n","import { graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport React from 'react'\r\n\r\nimport Post from 'templates/post'\r\nimport Meta from 'components/meta'\r\nimport Layout from 'components/layout'\r\nimport Page from 'templates/page'\r\n\r\nconst Template = ({ data, location }) => (\r\n  <div>\r\n    <Layout location={location}>\r\n      <Meta\r\n        title={get(data, 'post.frontmatter.title')}\r\n        site={get(data, 'site.meta')}\r\n      />\r\n      {get(data, 'post.frontmatter.layout') != 'page' ? (\r\n        <Post\r\n          data={get(data, 'post')}\r\n          options={{\r\n            isIndex: false,\r\n            adsense: get(data, 'site.meta.adsense'),\r\n          }}\r\n        />\r\n      ) : (\r\n        <Page {...this.props} />\r\n      )}\r\n    </Layout>\r\n  </div>\r\n)\r\nexport default Template\r\n\r\nexport const pageQuery = graphql`\r\n  query PostByPath($path: String!) {\r\n    site {\r\n      meta: siteMetadata {\r\n        title\r\n        description\r\n        url: siteUrl\r\n        author\r\n        twitter\r\n        adsense\r\n      }\r\n    }\r\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        layout\r\n        title\r\n        path\r\n        category\r\n        tags\r\n        description\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        image {\r\n          childImageSharp {\r\n            fluid(maxWidth: 500) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}